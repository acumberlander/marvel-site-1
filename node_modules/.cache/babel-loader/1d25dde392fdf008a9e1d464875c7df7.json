{"ast":null,"code":"import axios from \"axios\";\nimport apiKeys from \"../apiKeys\";\nimport firebase from \"firebase\";\nvar firebaseUrl = apiKeys.apiKeys.firebaseConfig.databaseURL;\n\nvar createUser = function createUser(user) {\n  return axios.post(\"\".concat(firebaseUrl, \"/users.json\"), user);\n};\n\nvar updateUserCollection = function updateUserCollection(user, userKey) {\n  return axios.put(\"\".concat(firebaseUrl, \"/users/\").concat(userKey, \".json\"), user);\n};\n\nvar deleteUserCollectionItem = function deleteUserCollectionItem(userKey, itemId) {\n  var itemRef = firebase.database().ref(\"users/\" + userKey + \"/collection/\" + itemId);\n  itemRef.remove();\n};\n\nvar getUserByUid = function getUserByUid(uid) {\n  return new Promise(function (resolve, reject) {\n    axios.get(\"\".concat(firebaseUrl, \"/users.json?orderBy=\\\"uid\\\"&equalTo=\\\"\").concat(uid, \"\\\"\")).then(function (result) {\n      var userObject = result.data;\n      var userKeys = \"\";\n\n      if (userObject != null) {\n        Object.keys(userObject).forEach(function (userId) {\n          userObject[userId].id = userId;\n          userKeys = userObject[userId];\n        });\n      }\n\n      resolve(userKeys);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}; // returns array of user objects\n\n\nvar getAllUsers = function getAllUsers() {\n  return new Promise(function (resolve, reject) {\n    axios.get(\"\".concat(firebaseUrl, \"/users.json\")).then(function (result) {\n      var userObject = result.data;\n      var userArray = [];\n\n      if (userObject != null) {\n        Object.keys(userObject).forEach(function (userId) {\n          userObject[userId].id = userId;\n          userArray.push(userObject[userId]);\n        });\n      }\n\n      resolve(userArray);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n};\n\nexport default {\n  getAllUsers: getAllUsers,\n  getUserByUid: getUserByUid,\n  createUser: createUser,\n  updateUserCollection: updateUserCollection,\n  deleteUserCollectionItem: deleteUserCollectionItem\n};","map":{"version":3,"sources":["C:\\Users\\acumberlander\\projects\\marvel-site-1\\src\\App\\Helpers\\Data\\Requests\\userRequests.js"],"names":["axios","apiKeys","firebase","firebaseUrl","firebaseConfig","databaseURL","createUser","user","post","updateUserCollection","userKey","put","deleteUserCollectionItem","itemId","itemRef","database","ref","remove","getUserByUid","uid","Promise","resolve","reject","get","then","result","userObject","data","userKeys","Object","keys","forEach","userId","id","catch","error","getAllUsers","userArray","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport apiKeys from \"../apiKeys\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseUrl = apiKeys.apiKeys.firebaseConfig.databaseURL;\r\n\r\nconst createUser = (user) => axios.post(`${firebaseUrl}/users.json`, user);\r\n\r\nconst updateUserCollection = (user, userKey) =>\r\n  axios.put(`${firebaseUrl}/users/${userKey}.json`, user);\r\n\r\nconst deleteUserCollectionItem = (userKey, itemId) => {\r\n  let itemRef = firebase\r\n    .database()\r\n    .ref(\"users/\" + userKey + \"/collection/\" + itemId);\r\n  itemRef.remove();\r\n};\r\n\r\nconst getUserByUid = (uid) =>\r\n  new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`${firebaseUrl}/users.json?orderBy=\"uid\"&equalTo=\"${uid}\"`)\r\n      .then((result) => {\r\n        const userObject = result.data;\r\n        let userKeys = \"\";\r\n        if (userObject != null) {\r\n          Object.keys(userObject).forEach((userId) => {\r\n            userObject[userId].id = userId;\r\n            userKeys = userObject[userId];\r\n          });\r\n        }\r\n        resolve(userKeys);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n\r\n// returns array of user objects\r\nconst getAllUsers = () =>\r\n  new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`${firebaseUrl}/users.json`)\r\n      .then((result) => {\r\n        const userObject = result.data;\r\n        const userArray = [];\r\n        if (userObject != null) {\r\n          Object.keys(userObject).forEach((userId) => {\r\n            userObject[userId].id = userId;\r\n            userArray.push(userObject[userId]);\r\n          });\r\n        }\r\n        resolve(userArray);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n\r\nexport default {\r\n  getAllUsers,\r\n  getUserByUid,\r\n  createUser,\r\n  updateUserCollection,\r\n  deleteUserCollectionItem,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}