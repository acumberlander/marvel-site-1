{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\acumberlander\\\\projects\\\\marvel-site-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport apiKeys from \"../apiKeys\";\nimport userRequests from \"./userRequests\";\nvar firebaseUrl = apiKeys.apiKeys.firebaseConfig.databaseURL; // const uid = authRequests.getCurrentUid();\n\nvar getCollection = function getCollection() {\n  return new Promise(function (resolve, reject) {\n    return axios.get(\"\".concat(firebaseUrl, \"/collection.json\")).then(function (result) {\n      var collectionObj = result.data;\n      resolve(collectionObj);\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n};\n\nvar getContentById = function getContentById(id) {\n  return getCollection().then(function (res) {\n    // debugger;\n    var comics = res.Comics;\n    var movies = res.Movies;\n    var popular = res.Popular;\n    var series = res.Series;\n    var contentArray = [].concat(_toConsumableArray(popular), _toConsumableArray(movies), _toConsumableArray(comics), _toConsumableArray(series));\n    var contentItem = contentArray.filter(function (item) {\n      return item.id === id;\n    })[0];\n    return contentItem;\n  });\n};\n\nvar getUserCollectionItemsByUid = function getUserCollectionItemsByUid(uid) {\n  return new Promise(function (resolve, reject) {\n    return axios.get(\"\".concat(firebaseUrl, \"/users.json?orderBy=\\\"uid\\\"&equalTo=\\\"\").concat(uid, \"\\\"\")).then(function (result) {\n      var collectionObject = result.data[Object.keys(result.data)];\n\n      if (collectionObject != null) {\n        var userCollection = collectionObject.collection;\n        resolve(userCollection);\n      }\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n};\n\nvar addCollectionItem = function addCollectionItem(uid, newItem) {\n  return userRequests.getUserByUid(uid).then(function (res) {\n    debugger;\n    var userObject = res;\n    var userKey = res[\"id\"];\n\n    if (!userObject.collection) {\n      userObject.collection = [newItem];\n      userRequests.updateUserCollection(userObject, userKey);\n    } else {\n      var filteredArr = userObject.collection.filter(function (item) {\n        return item.id === newItem.id;\n      });\n      if (filteredArr.length === 0) userObject.collection.push(newItem);\n      userRequests.updateUserCollection(userObject, userKey);\n    }\n  });\n};\n\nvar deleteFromCollection = function deleteFromCollection(uid, item) {\n  return userRequests.getUserByUid(uid).then(function (res) {\n    console.log(item);\n    var userKey = res[\"id\"];\n    var userObject = res;\n    var updatedArr = userObject.collection.filter(function (i) {\n      return i.id !== item.id;\n    });\n    userObject.collection = updatedArr;\n    userRequests.updateUserCollection(userObject, userKey);\n  });\n};\n\nexport default {\n  getUserCollectionItemsByUid: getUserCollectionItemsByUid,\n  addCollectionItem: addCollectionItem,\n  deleteFromCollection: deleteFromCollection,\n  getCollection: getCollection,\n  getContentById: getContentById\n};","map":{"version":3,"sources":["C:\\Users\\acumberlander\\projects\\marvel-site-1\\src\\App\\Helpers\\Data\\Requests\\collectionRequest.js"],"names":["axios","apiKeys","userRequests","firebaseUrl","firebaseConfig","databaseURL","getCollection","Promise","resolve","reject","get","then","result","collectionObj","data","catch","err","getContentById","id","res","comics","Comics","movies","Movies","popular","Popular","series","Series","contentArray","contentItem","filter","item","getUserCollectionItemsByUid","uid","collectionObject","Object","keys","userCollection","collection","error","addCollectionItem","newItem","getUserByUid","userObject","userKey","updateUserCollection","filteredArr","length","push","deleteFromCollection","console","log","updatedArr","i"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport apiKeys from \"../apiKeys\";\r\nimport userRequests from \"./userRequests\";\r\n\r\nconst firebaseUrl = apiKeys.apiKeys.firebaseConfig.databaseURL;\r\n// const uid = authRequests.getCurrentUid();\r\n\r\nconst getCollection = () =>\r\n  new Promise((resolve, reject) =>\r\n    axios\r\n      .get(`${firebaseUrl}/collection.json`)\r\n      .then((result) => {\r\n        let collectionObj = result.data;\r\n        resolve(collectionObj);\r\n      })\r\n      .catch((err) => reject(err))\r\n  );\r\n\r\nconst getContentById = (id) =>\r\n  getCollection().then((res) => {\r\n    // debugger;\r\n    let comics = res.Comics;\r\n    let movies = res.Movies;\r\n    let popular = res.Popular;\r\n    let series = res.Series;\r\n    let contentArray = [...popular, ...movies, ...comics, ...series];\r\n    let contentItem = contentArray.filter((item) => item.id === id)[0];\r\n    return contentItem;\r\n  });\r\n\r\nconst getUserCollectionItemsByUid = (uid) =>\r\n  new Promise((resolve, reject) =>\r\n    axios\r\n      .get(`${firebaseUrl}/users.json?orderBy=\"uid\"&equalTo=\"${uid}\"`)\r\n      .then((result) => {\r\n        const collectionObject = result.data[Object.keys(result.data)];\r\n        if (collectionObject != null) {\r\n          const userCollection = collectionObject.collection;\r\n          resolve(userCollection);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n  );\r\n\r\nconst addCollectionItem = (uid, newItem) =>\r\n  userRequests.getUserByUid(uid).then((res) => {\r\n    debugger;\r\n    let userObject = res;\r\n    let userKey = res[\"id\"];\r\n\r\n    if (!userObject.collection) {\r\n      userObject.collection = [newItem];\r\n      userRequests.updateUserCollection(userObject, userKey);\r\n    } else {\r\n      let filteredArr = userObject.collection.filter(\r\n        (item) => item.id === newItem.id\r\n      );\r\n\r\n      if (filteredArr.length === 0) userObject.collection.push(newItem);\r\n      userRequests.updateUserCollection(userObject, userKey);\r\n    }\r\n  });\r\n\r\nconst deleteFromCollection = (uid, item) =>\r\n  userRequests.getUserByUid(uid).then((res) => {\r\n    console.log(item);\r\n    let userKey = res[\"id\"];\r\n    let userObject = res;\r\n\r\n    let updatedArr = userObject.collection.filter((i) => i.id !== item.id);\r\n    userObject.collection = updatedArr;\r\n    userRequests.updateUserCollection(userObject, userKey);\r\n  });\r\n\r\nexport default {\r\n  getUserCollectionItemsByUid,\r\n  addCollectionItem,\r\n  deleteFromCollection,\r\n  getCollection,\r\n  getContentById,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}